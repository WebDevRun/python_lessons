# Методы строк
print('Методы строк')

str_single_quotes = 'Hello'
str_double_quotes = "world"
concat_str = str_single_quotes + ', ' + str_double_quotes + '!'

# Метод capitalize() возвращает копию строки с заглавными буквами ее первого символа, а остальные в нижнем регистре
print('Результат метода capitalize(): ' + 'python is FUN!'.capitalize())

# Метод lower() возвращает копию строки в нижнем регистре
print('Результат метода lower(): ' + concat_str.lower())

# Метод upper() вовращает копию строки в нижнем регистре
print('Результат метода upper(): ' + concat_str.upper())

# Метод strip() удаляет любые пробелы с начала или конца
print('Результат метода strip(): ' + '    Hello, world!        '.strip())

# Метод replace() заменяет строку другой строкой
print('Результат метода replace(): ' + concat_str.replace('H', 'J'))

# Метод split() разбивает строку на подстроки и возвращает список, если находит экземпляры разделителя
print('Результат метода split(): ' + str(concat_str.split(',')))

# Метод format() принимает переданные аргументы, форматирует их и помещает в строку, в которой находятся заполнители {}
age = 36
txt = 'Меня зовут Джон и мне {} лет'

print('Результат метода format(): ' + txt.format(age))

# Так же вы можете резулировать порядок вставки необходимых данных
quantity = 3
itemno = 567
price = 49.95
myorder = "Я хочу заплатить {2} долларов за {0} штуки товара №{1}."

print('Результат метода format() с указанием порядка: ' +  myorder.format(quantity, itemno, price))

# Метод center(length, character) выровняет строку по центру, используя указанный символ (пробел по умолчанию) в качестве символа заполнения.
print('Результат метода center(): ' + concat_str.center(20, '_'))

# Метод count(value, start, end) возвращает количество раз, когда указанное значение появляется в строкеб где:
# value - строка для поиска (обязательный аргумент)
# start - позиция начала поиска (опциональный аргумент; целое число; по умолчанию = 0)
# end - позиция конца поиска (опциональный аргумент, целое число; по умолчанию = длина строки)
txt = 'I love apples, apple are my favorite fruit'

print('Результат метода count(): ' + str(txt.count('apple', 10, 24)))

# Метод endswith(value, start, end) возвращает значение true, если строка заканчивается указанным значением, в противном случае значение false, где:
# value - строка для поиска (обязательный аргумент)
# start - позиция начала поиска (опциональный аргумент; целое число; по умолчанию = 0)
# end - позиция конца поиска (опциональный аргумент, целое число; по умолчанию = длина строки)
txt = 'Hello, welcome to my world.'

print('Результат метода endswith(): ' + str(txt.endswith('my world.', 5, 11)))

# Метод index(value, start, end) находит первое вхождение указанного значения, где:
# value - строка для поиска (обязательный аргумент)
# start - позиция начала поиска (опциональный аргумент; целое число; по умолчанию = 0)
# end - позиция конца поиска (опциональный аргумент, целое число; по умолчанию = длина строки)
print('Результат метода index(): ' + str(txt.index('my world.')))
# Метод isalnum() возвращает значение true, если все символы буквенно-цифровые, то есть буквы алфавита (a-z, A-Z) и цифры (0-9).
print('Результат метода isalnum(): ' + str(txt.isalnum()))

# Метод isalpha() возвращает значение true, если все символы буквенные, то есть буквы алфавита (a-z, A-Z)
txt = "Company10"
print('Результат метода isalpha(): ' + str(txt.isalpha()))

# Метод isdecimal() возвращает значение True, если все символы являются десятичными (0-9).
null_str = "\u0030" # unicode for 0
print('Результат метода isdecimal(): ' + str(null_str.isdecimal()))
